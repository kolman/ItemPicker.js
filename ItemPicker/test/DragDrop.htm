<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <script src="../Scripts/jquery-1.7.1.js"></script>
        <script src="../Scripts/jquery-ui-1.8.17.js"></script>
        <script src="../Scripts/jquery.simulate.js"></script>
        <link rel="stylesheet" href="../Content/qunit.css" type="text/css" media="screen" />
        <script type="text/javascript" src="../Scripts/qunit.js"></script>
        <script src="../Scripts/hamcrest.js"></script>
  
        <link type="text/css" rel="stylesheet" href="../src/itemPicker.css" />
        <script type="text/javascript" src="../src/itemPicker.js"></script>

        <script type="text/javascript">
            $(document).ready(function () {

                $('#source').itemPicker({
                    selection: 'none',
                    loadContent: function ($picker, callback) {
                        callback([
                                { Value: 1, Label: 'item 1' },
                                { Value: 2, Label: 'item 2' },
                                { Value: 3, Label: 'item 3' }
                            ]);
                    },
                    itemFactory: function ($itemContainer, item, createItem) {
                        createItem($itemContainer, item);
                        $itemContainer.draggable({
                            connectToSortable: $('#target'),
                            helper: 'clone'
                        });
                    }
                });

                $('#source').itemPicker('reload');

                $('#target').itemPicker({
                    selection: 'single',
                    loadContent: function ($picker, callback) {
                        callback([]);
                    }
                }).sortable({
                    receive: function (ev, ui) {
                        var data = $(ui.sender).data('item');
                        var $item = $(this).data().sortable.currentItem;
                        $item.data('item', data);
                    }
                });

                var $items = $('#source .itemPicker-item');
                var $movedItem = $($items[0]);
                var i = $movedItem.offset();
                var t = $('#target').offset();
                $movedItem.simulate('drag', { dx: 0, dy: t.top - i.top });

                test("Dragged item stays in source", function () {
                    assertThat($('#source .itemPicker-item')[0], equalTo($movedItem[0]));
                });

                test("Target contains copy of dragged item", function () {
                    var $targetItems = $('#target .itemPicker-item');
                    assertThat($targetItems.length, equalTo(1));
                    assertThat($($targetItems[0]).data('item').Value, $movedItem.data('item').Value);
                });

            });
        </script>
  
    </head>
    <body>
        <h1 id="qunit-header">Single Selection</h1>
        <h2 id="qunit-banner"></h2>
        <div id="qunit-testrunner-toolbar"></div>
        <h2 id="qunit-userAgent"></h2>
        <ol id="qunit-tests"></ol>

        <div id="source" style="width:100px; height:100px"></div>
        <div id="target" style="width:100px; height:100px"></div>

    </body>
</html>
